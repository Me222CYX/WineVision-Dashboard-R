e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
#par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,froglike )))
points(llikelihoodValues, pch=16, col=2)
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=10) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3, family = poisson)
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
#par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,froglike )))
points(llikelihoodValues, pch=12, col=2)
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=10) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3, family = poisson)
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
#par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,froglike )))
points(llikelihoodValues, pch=16, col=2)
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=10) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3, family = poisson)
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,froglike )))
points(llikelihoodValues, pch=16, col=2)
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=212) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3, family = poisson)
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,froglike )))
points(llikelihoodValues, pch=16, col=2)
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=212) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3, family = binomial(link = "logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,froglike )))
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=212) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3, family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,froglike )))
boxplot(froglike, ylim=range(c(llikelihoodValues,range(froglike))))
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=212) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3, family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,range(froglike))))
froglike
froglike
#
max(frogs$pres.abs)
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
max(frogs$pres.abs)
simloglike <- function(x,x1,x2,x3,y.glm, N=1) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3,family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
froglike
par(mar=c(1, 4, .1, .1))
#boxplot(froglike, ylim=range(c(llikelihoodValues,range(froglike))))
points(llikelihoodValues, pch=16, col=2)
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
max(frogs$pres.abs)
simloglike <- function(x,x1,x2,x3,y.glm, N=1) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3,family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
froglike
par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,range(froglike))))
points(llikelihoodValues, pch=16, col=2)
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
max(frogs$pres.abs)
simloglike <- function(x,x1,x2,x3,y.glm, N=10) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3,family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
froglike
par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,range(froglike))))
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
froglike
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
max(frogs$pres.abs)
simloglike <- function(x,x1,x2,x3,y.glm, N=212) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3,family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
froglike
par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,range(froglike))))
boxplot(froglike, ylim=range(c(llikelihoodValues)))
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
max(frogs$pres.abs)
simloglike <- function(x,x1,x2,x3,y.glm, N=212) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3,family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
froglike
par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues)))
points(llikelihoodValues, pch=16, col=2)
simulate(frogs.glm)$sim_1
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=212) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3,family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
froglike
par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues)))
points(llikelihoodValues, pch=16, col=2)
boxplot(froglike, ylim=range(c(llikelihoodValues,range(froglike ))))
range(c(llikelihoodValues,range(froglike ))
range(c(llikelihoodValues,range(froglike )))
c(llikelihoodValues,range(froglike ))
max(c(llikelihoodValues,range(froglike )))
min(c(llikelihoodValues,range(froglike )))
c(llikelihoodValues,range(froglike ))
froglike
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=10) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3,family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
froglike
par(mar=c(1, 4, .1, .1))
boxplot(froglike, ylim=range(c(llikelihoodValues,range(froglike ))))
froglike
boxplot(froglike))
boxplot(froglike))
boxplot(froglike)
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=10) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3,family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
froglike
par(mar=c(1, 4, .1, .1))
#boxplot(froglike, ylim=range(c(llikelihoodValues,range(froglike ))))
points(llikelihoodValues, pch=16, col=2)
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=10) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3,family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
froglike
par(mar=c(1, 4, .1, .1))
#boxplot(froglike, ylim=range(c(llikelihoodValues,range(froglike ))))
boxplot(froglike)
points(llikelihoodValues, pch=16, col=2)
c(llikelihoodValues,range(froglike ))
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=212) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3,family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
froglike
par(mar=c(1, 4, .1, .1))
#boxplot(froglike, ylim=range(c(llikelihoodValues,range(froglike ))))
boxplot(froglike)
points(llikelihoodValues, pch=16, col=2)
frogs.glm <- glm(pres.abs~log(distance)+log(NoOfPools)+meanmin+meanmax, family =binomial(link = "logit"),data=frogs)
llikelihoodValues <-log(dbinom(frogs$pres.abs, siz =212, prob=fitted(frogs.glm)))
llikelihoodValues
#
simloglike <- function(x,x1,x2,x3,y.glm, N=212) {
ll <- matrix(0, ncol=length(x), nrow=N)
for (j in 1:N) {
y <- simulate(y.glm)$sim_1
sim.glm <- glm(y~ x+x1+x2+x3,family = binomial(link ="logit"))
a <- coef(sim.glm)[1]
b <- coef(sim.glm)[2]
c <- coef(sim.glm)[3]
d <- coef(sim.glm)[4]
e <- coef(sim.glm)[5]
loglikelihoodValues <-log(dbinom(y, size = 212, prob =  exp(a + b*x+c*x1+d*x2+e*x3)/(1 + exp(a + b*x+c*x1+d*x2+e*x3))))
ll[j, ] <- loglikelihoodValues
}
ll <- data.frame(ll) #names(ll) <- as.character(x) names(ll) <- ""
ll
}
#
froglike <- with(frogs, simloglike(log(distance),log(NoOfPools),meanmin,meanmax,frogs.glm))
par(mar=c(1, 4, .1, .1))
boxplot(froglike)
points(llikelihoodValues, pch=16, col=2)
ACF.qpoisson<-glm(ACF.Total~ T + INJ ,data = sect6data, family=quasipoisson)
summary(ACF.qpoisson)
# nagative binomial
suppressMessages(library(MASS))
ACF.nb <- glm.nb(ACF.Total~ T + INJ,data = sect6data)
summary(ACF.nb)
source('~/Desktop/MDS/data551/dashboard-project---r-data551_group8/app.r', echo=TRUE)
setwd("~/Desktop/MDS/data551/dashboard-project---r-data551_group8")
source('~/Desktop/MDS/data551/dashboard-project---r-data551_group8/app.r', echo=TRUE)
source('~/Desktop/MDS/data551/dashboard-project---r-data551_group8/app.r', echo=TRUE)
debugSource('~/Desktop/MDS/data551/dashboard-project---r-data551_group8/app.r', echo=TRUE)
debugSource('~/Desktop/MDS/data551/dashboard-project---r-data551_group8/app.r', echo=TRUE)
debugSource('~/Desktop/MDS/data551/dashboard-project---r-data551_group8/app.r', echo=TRUE)
Q
debugSource('~/Desktop/MDS/data551/dashboard-project---r-data551_group8/app.r', echo=TRUE)
Q
source('~/Desktop/MDS/data551/dashboard-project---r-data551_group8/app.r', echo=TRUE)
